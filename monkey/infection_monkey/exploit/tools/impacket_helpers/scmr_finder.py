from impacket.dcerpc.v5 import epm, transport
from impacket.dcerpc.v5.scmr import MSRPC_UUID_SCMR


class ScmrFinder:
    """
    This class queries RPC endpoint to figure out where SCMR endpoint is (it's on a random high port).
    It's also possible to brute force it, but the impact of that is unwanted, so not implemented yet.
    """
    def __init__(self, ip_addr: str):
        self.string_binding = ScmrFinder.build_rpc_string_binding(ip_addr)

    @staticmethod
    def build_rpc_string_binding(ip_addr: str) -> str:
        return f"ncacn_ip_tcp:{ip_addr}[135]"

    def get_scmr_stringbinding(self):
        rpctransport = transport.DCERPCTransportFactory(self.string_binding)
        # Query RPC for a handle
        dce_rpc = rpctransport.get_dce_rpc()
        dce_rpc.connect()

        try:  # try to get the the SCMR endpoint
            # Connecting to MGMT interface
            resp = epm.hept_lookup(None, dce=dce_rpc, inquiry_type=epm.RPC_C_EP_MATCH_BY_IF, ifId=MSRPC_UUID_SCMR)

            return epm.PrintStringBinding(resp[0]['tower']['Floors'])
        finally:
            dce_rpc.disconnect()
