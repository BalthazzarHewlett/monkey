from logging import getLogger

from common.common_consts.timeouts import LONG_REQUEST_TIMEOUT
from infection_monkey.exploit.tools.helpers import get_target_monkey
from infection_monkey.exploit.tools.http_tools import HTTPTools

LOG = getLogger(__name__)


class MonkeyBinaryServer:

    def __init__(self, host):
        self.host = host

    def __enter__(self):
        # Download monkey to memory
        src_path = get_target_monkey(self.host)
        if not src_path:
            LOG.info("Can't find suitable monkey executable for host %r", self.host)
            return False

        # Serve downloaded monkey
        http_path, self.http_thread = HTTPTools.create_locked_transfer(self.host, src_path)
        if not http_path:
            LOG.debug("Exploiter failed, http transfer creation failed.")
            return False
        LOG.info("Started http server on %s", http_path)
        return http_path

    def __exit__(self, exc_type, exc_val, exc_tb):
        self.http_thread.join(LONG_REQUEST_TIMEOUT)
        self.http_thread.stop()
